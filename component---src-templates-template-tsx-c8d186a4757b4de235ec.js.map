{"version":3,"sources":["webpack:///./src/templates/Template.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./src/Header.tsx","webpack:///./src/SidebarContents.tsx","webpack:///./src/TableOfContents.tsx","webpack:///./src/Layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_1__","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_1___default","_Layout__WEBPACK_IMPORTED_MODULE_2__","PageTemplate","_ref","mdx","data","a","createElement","sidebarRoot","frontmatter","root","code","body","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","siteMetadata","title","plugins","resolve","options","name","path","__dirname","typeName","short_name","start_url","background_color","theme_color","display","icon","className","defaultLayouts","extensions","remarkPlugins","gatsbyRemarkPlugins","classPrefix","inlineCodeMarker","showLineNumbers","noInlineHighlight","pathPrefix","Header","_Component","apply","this","arguments","inheritsLoose_default","prototype","siteTitle","react_default","row","menu","mode","Item","gatsby_browser_entry","to","href","target","type","Component","SubMenu","Menu","constructTree","list","tree","dir","forEach","item","parents","push","subtree","_loop","i","filter","node","length","newNode","key","find","sortTree","sort","b","SidebarContents","_convertToTree","map","edge","fields","slug","id","convertToTree","allMdx","edges","startsWith","loop","style","fontWeight","menu_default","keys","window","undefined","console","log","defaultOpenKeys","minWidth","height","borderRight","selectedKeys","_1456355057","Link","Anchor","filterAnchorDetails","anchors","last_depth","slice","call","anchor","depth","parseInt","parentElement","nodeName","innerText","deleteNode","j","index","splice","TableOfContents","_React$useState","useState","setAnchors","useLayoutEffect","document","getElementsByClassName","anchor_default","margin","Sider","Layout","Content","RootLayout","allPosts","replace","indexOf","site","gridTemplateRows","Helmet_default","meta","content","lang","Header_Header","gridTemplateColumns","SidebarContents_SidebarContents","layout","background","padding","width","_1423624756"],"mappings":"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","file":"component---src-templates-template-tsx-c8d186a4757b4de235ec.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\nimport { RootLayout as Layout } from '../Layout'\n\nfunction PageTemplate({ data: { mdx } }: any) {\n  return (\n    <Layout sidebarRoot={mdx.frontmatter.root}>\n      <MDXRenderer>{mdx.code.body}</MDXRenderer>\n    </Layout>\n  )\n}\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      frontmatter {\n        title\n        root\n      }\n      code {\n        body\n      }\n    }\n  }\n`\nexport default PageTemplate\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  siteMetadata: {\n    title: 'Liftoff Guide',\n  },\n  plugins: [\n    `gatsby-plugin-typescript`,\n    'gatsby-plugin-react-helmet',\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: `${__dirname}/src/images`,\n      },\n    },\n    {\n      resolve: `gatsby-transformer-json`,\n      options: {\n        typeName: `MenuItems`, // a fixed string\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `menuItems`,\n        path: `${__dirname}/src/menuItems`,\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `contents`,\n        path: `${__dirname}/contents`,\n      },\n    },\n    'gatsby-transformer-sharp',\n    'gatsby-plugin-sharp',\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'gatsby-starter-markdown',\n        short_name: 'starter',\n        start_url: '/',\n        background_color: '#663399',\n        theme_color: '#663399',\n        display: 'minimal-ui',\n        icon: 'src/images/gatsby-icon.png', // This path is relative to the root of the site.\n      },\n    },\n    {\n      resolve: `gatsby-transformer-remark`,\n      options: {\n        plugins: [\n          `gatsby-remark-katex`,\n          {\n            resolve: `gatsby-remark-autolink-headers`,\n            options: {\n              className: 'post-toc-anchor',\n            },\n          },\n        ],\n      },\n    },\n    {\n      resolve: `gatsby-mdx`,\n      options: {\n        defaultLayouts: {\n          default: require.resolve('./src/Layout.tsx'),\n        },\n        extensions: ['.mdx', '.md'],\n        remarkPlugins: [require('gatsby-transformer-remark')],\n        gatsbyRemarkPlugins: [\n          'gatsby-remark-katex',\n          {\n            resolve: `gatsby-remark-autolink-headers`,\n            options: {\n              className: 'post-toc-anchor',\n            },\n          },\n          {\n            resolve: `gatsby-remark-prismjs`,\n            options: {\n              classPrefix: 'language-',\n              inlineCodeMarker: null,\n              showLineNumbers: true,\n              noInlineHighlight: false,\n            },\n          },\n        ],\n      },\n    },\n    `gatsby-plugin-remove-trailing-slashes`,\n    // this (optional) plugin enables Progressive Web App + Offline functionality\n    // To learn more, visit: https://gatsby.app/offline\n    // 'gatsby-plugin-offline',\n  ],\n  /// this must match the path your webpage is displayed from\n  pathPrefix: '/',\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { Layout, Menu, Row, Icon, Col } from 'antd'\n\ninterface Props {\n  siteTitle: string\n}\n\nexport class Header extends Component<Props> {\n  render() {\n    const { siteTitle } = this.props\n    return (\n      <Row>\n        <Menu mode=\"horizontal\">\n          <Menu.Item>\n            <Link to=\"/docs/get-started/introduction/\">{siteTitle}</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <a\n              href=\"https://github.com/jannikbuschke/gatsby-antd-docs\"\n              target=\"_blank\"\n            >\n              <Icon type=\"github\" />\n              GitHub\n            </a>\n          </Menu.Item>\n          <Menu.Item>\n            <a href=\"https://twitter.com/jannikbuschke\" target=\"_blank\">\n              <Icon type=\"twitter\" />\n              Twitter\n            </a>\n          </Menu.Item>\n        </Menu>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { graphql, StaticQuery, Link } from 'gatsby'\nimport Menu from 'antd/lib/menu'\nimport 'antd/lib/menu/style/css'\nimport { pathPrefix } from '../gatsby-config'\n\nconst SubMenu = Menu.SubMenu\n\nconst convertToTree = data => {\n  const list = data.map(edge => {\n    return {\n      path: edge.node.fields.slug,\n      key: edge.node.id,\n      title: edge.node.frontmatter.title,\n      parents: edge.node.frontmatter.parents,\n    }\n  })\n  return constructTree(list)\n}\n\nconst constructTree = list => {\n  let tree = []\n  let dir = []\n  list.forEach(item => {\n    if (item.parents === [] || item.parents === null) tree.push(item)\n    else {\n      let subtree = tree\n      for (let i = 0; i < item.parents.length; i++) {\n        if (\n          subtree.filter(\n            node => node.title === item.parents[i] && node.children\n          ).length === 0\n        ) {\n          const newNode = {\n            key: item.path,\n            title: item.parents[i],\n            children: [],\n          }\n          subtree.push(newNode)\n          dir.push(newNode)\n        }\n        subtree = subtree.find(\n          node => node.title === item.parents[i] && node.children\n        ).children\n      }\n      subtree.push(item)\n    }\n  })\n  return [tree, dir]\n}\n\nconst sortTree = tree => {\n  tree.sort((a, b) => {\n    if (\n      ((a.children && b.children) || (!a.children && !b.children)) &&\n      a.title > b.title\n    )\n      return 1\n    else if (a.children) return 1\n    return -1\n  })\n}\n\ninterface Props {\n  root: any\n}\n\nexport const SidebarContents = ({ root }: Props) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query sidebarContentQuery {\n          allMdx(sort: { order: ASC, fields: [fields___slug] }) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                id\n                frontmatter {\n                  title\n                  parents\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const [tree, dir] = convertToTree(\n          data.allMdx.edges.filter(node =>\n            node.node.fields.slug.startsWith(root)\n          )\n        )\n        sortTree(tree)\n        const loop = data =>\n          data.map(item => {\n            if (item.children) {\n              sortTree(item.children)\n              return (\n                <SubMenu\n                  key={item.key}\n                  title={<span style={{ fontWeight: 900 }}>{item.title}</span>}\n                >\n                  {loop(item.children)}\n                </SubMenu>\n              )\n            }\n            return (\n              <Menu.Item key={item.path}>\n                <Link to={item.path}>\n                  <div>{item.title}</div>\n                </Link>\n              </Menu.Item>\n            )\n          })\n        const keys =\n          typeof window !== 'undefined'\n            ? [pathPrefix + window.location.pathname]\n            : undefined\n        console.log({ keys, tree: loop(tree) })\n        const defaultOpenKeys = dir.map(item => item.key)\n        return (\n          <Menu\n            mode=\"inline\"\n            style={{ minWidth: 180, height: '100%', borderRight: 0 }}\n            defaultOpenKeys={defaultOpenKeys}\n            selectedKeys={keys}\n          >\n            {loop(tree)}\n          </Menu>\n        )\n      }}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport Anchor from 'antd/lib/anchor'\nimport 'antd/lib/anchor/style/css'\n\nconst { Link } = Anchor\n\nconst filterAnchorDetails = anchors => {\n  let last_depth = 0\n  anchors = [].slice.call(anchors).map(anchor => {\n    let depth = parseInt(anchor.parentElement.nodeName[1])\n    if (last_depth !== 0 && depth > last_depth) depth = last_depth + 1\n    last_depth = depth\n    return {\n      href: '#' + anchor.parentElement.id,\n      title: anchor.parentElement.innerText,\n      depth: depth,\n      children: [],\n    }\n  })\n  constructTree(anchors)\n  return anchors\n}\n\nconst constructTree = list => {\n  let deleteNode = []\n  for (let i = 0; i < list.length; i++) {\n    for (let j = i + 1; j < list.length; j++) {\n      if (list[i].depth + 1 === list[j].depth) {\n        list[i].children.push(list[j])\n        deleteNode.push(j)\n      } else if (list[i].depth >= list[j].depth) break\n    }\n  }\n  deleteNode.sort((a, b) => b - a).forEach(index => list.splice(index, 1))\n}\n\nexport function TableOfContents() {\n  const [anchors, setAnchors] = React.useState<any[]>([])\n\n  React.useLayoutEffect(() => {\n    const anchors = document.getElementsByClassName('post-toc-anchor')\n    setAnchors(filterAnchorDetails(anchors))\n  }, [])\n\n  const loop = data =>\n    data.map(item => {\n      if (item.children.length > 0) {\n        return (\n          <Link href={item.href} title={item.title} key={item.href}>\n            {loop(item.children)}\n          </Link>\n        )\n      }\n      return <Link href={item.href} title={item.title} key={item.href} />\n    })\n  return (\n    <Anchor style={{ margin: '50px 50px 0px 0px' }}>{loop(anchors)}</Anchor>\n  )\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Header } from './Header'\nimport { pathPrefix } from '../gatsby-config'\nimport { Layout, Breadcrumb } from 'antd'\nimport { SidebarContents } from './SidebarContents'\nimport { TableOfContents } from './TableOfContents'\nconst { Sider, Content } = Layout\n\nexport function RootLayout({ children, sidebarRoot }: any) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n          allMdx {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const allPosts = data.allMdx.edges.map(\n          (edge: any) => edge.node.fields.slug\n        )\n        let onPostPage\n        if (typeof window !== 'undefined') {\n          const path = window.location.pathname.replace(\n            pathPrefix.slice(0, -1),\n            ''\n          )\n          if (\n            allPosts.indexOf(path) >= 0 ||\n            allPosts.indexOf(path.slice(0, -1)) >= 0\n          ) {\n            onPostPage = true\n          } else {\n            onPostPage = false\n          }\n        }\n\n        const { title } = data.site.siteMetadata\n\n        return (\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateRows: 'auto 1fr',\n              height: '100vh',\n            }}\n          >\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                { name: 'description', content: 'Sample' },\n                { name: 'keywords', content: 'sample, something' },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <Header siteTitle={title} />\n\n            <div\n              style={{\n                display: 'grid',\n                gridTemplateColumns: 'auto 1fr auto',\n                height: '100%',\n              }}\n            >\n              <SidebarContents root={sidebarRoot} />\n              <Layout>\n                <Content\n                  style={{\n                    background: '#fff',\n                    padding: 24,\n                    margin: 0,\n                  }}\n                >\n                  {children}\n                </Content>\n              </Layout>\n              <TableOfContents />\n            </div>\n            <Layout>\n              <Sider\n                width={200}\n                style={{ background: '#fff', height: '100%' }}\n              />\n            </Layout>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default RootLayout\n"],"sourceRoot":""}