{"data":{"mdx":{"id":"70d08886-a9e9-5ce0-af63-3439596c2d55","frontmatter":{"title":"Architecure","root":"/docs"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Architecure\",\n  \"root\": \"/docs\",\n  \"parents\": [\"Get Started\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"java-spring-boot-api-with-a-react-front-end\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#java-spring-boot-api-with-a-react-front-end\",\n    \"aria-label\": \"java spring boot api with a react front end permalink\",\n    \"className\": \"post-toc-anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Java Spring Boot API with a React Front End\"), mdx(\"p\", null, \"Why would we pick these tools to build a web application you might ask yourself? What makes these technologies so special that I would spend the time to make this set up guide for them? Those questions will be answered in this guide but first we are going to talk about the difference between what Cheese MVC is and what you are going to be building is.\"), mdx(\"h2\", {\n    \"id\": \"refresher-on-mvc\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#refresher-on-mvc\",\n    \"aria-label\": \"refresher on mvc permalink\",\n    \"className\": \"post-toc-anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Refresher on MVC\"), mdx(\"p\", null, \"Model View Controller (MVC) divides an application into the three parts, Model, View and Controller. \"), mdx(\"p\", null, \"Model - objects used to interact with the database \"), mdx(\"p\", null, \"View - the pieces that make up the UI\"), mdx(\"p\", null, \"Controllers - manages the flow of data and business logic \"), mdx(\"p\", null, \"First and foremost this is a newer way and frankly better way to build applications than MVC, the way I am talking about is a REST API communicating and taking request from a Single Page Application.\"), mdx(\"h2\", {\n    \"id\": \"brief-overview-of-rest\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#brief-overview-of-rest\",\n    \"aria-label\": \"brief overview of rest permalink\",\n    \"className\": \"post-toc-anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Brief Overview of REST\"), mdx(\"p\", null, \" Now you might ask yourself what is an API and what is REST? I am not going to go into much detail about them because other people have spent the time to make articles that explain these concepts. \"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.codecademy.com/articles/what-is-rest\"\n  }), \"https://www.codecademy.com/articles/what-is-rest\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=s7wmiS2mSXY\"\n  }), \"https://www.youtube.com/watch?v=s7wmiS2mSXY\")), mdx(\"p\", null, \"What I will tell you is a REST API is a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"service/app/backend/whateverYouWantToCallIt\"), \" that exposes endpoints (urls) that you can call or hit. These will either return some kind of data or perform an operation. Usually these endpoints will take/give data in the format of JSON \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Javascript Object Notation\"), \" (not always XML still does get deployed to PROD some places).\"), mdx(\"h2\", {\n    \"id\": \"single-page-applications--javascript-frameworks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#single-page-applications--javascript-frameworks\",\n    \"aria-label\": \"single page applications  javascript frameworks permalink\",\n    \"className\": \"post-toc-anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Single Page Applications && Javascript Frameworks\"), mdx(\"p\", null, \"A single page application is an application that gets loaded on the client side. It is dynamic meaning it can hold state or logic to know what is being interacted with on the DOM by using a virtual dom. The easiest way to make a SPA is to use a Javascript framework. Angular was the first one of these to come into the scene. Followed by React and then Vue. There are others but these are by far the most popular. \"), mdx(\"p\", null, \"Here is an article on how they work\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://blog.pshrmn.com/how-single-page-applications-work/\"\n  }), \"https://blog.pshrmn.com/how-single-page-applications-work/\")), mdx(\"p\", null, \"Here is an article on what a JS framework is\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://skillcrush.com/2018/07/23/what-is-a-javascript-framework/\"\n  }), \"https://skillcrush.com/2018/07/23/what-is-a-javascript-framework/\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"70d08886-a9e9-5ce0-af63-3439596c2d55"}}