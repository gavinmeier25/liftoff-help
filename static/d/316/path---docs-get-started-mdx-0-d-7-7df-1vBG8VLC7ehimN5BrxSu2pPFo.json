{"data":{"mdx":{"id":"70d08886-a9e9-5ce0-af63-3439596c2d55","frontmatter":{"title":"Architecure","root":"/docs"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Architecure\",\n  \"root\": \"/docs\",\n  \"parents\": [\"Get Started\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"java-spring-boot-api-with-a-react-front-end\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#java-spring-boot-api-with-a-react-front-end\",\n    \"aria-label\": \"java spring boot api with a react front end permalink\",\n    \"className\": \"post-toc-anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Java Spring Boot API with a React Front End\"), mdx(\"p\", null, \"Why would we pick these tools to build a web application you might ask yourself? What makes these technologies so special that I would spend the time to make this set up guide for them? Those questions will be answered in this guide but first we are going to talk about the difference between what Cheese MVC is and what you are going to be building is.\"), mdx(\"p\", null, \"First and foremost this is a newer way and frankly better way to build applications than MVC, the way I am talking about is a REST API communicating and taking request from a Single Page Application. Now you might ask yourself what is an API and what is REST? I am not going to go into much detail about them because other people have spent the time to make articles that explain these concepts. \"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.codecademy.com/articles/what-is-rest\"\n  }), \"https://www.codecademy.com/articles/what-is-rest\")), mdx(\"p\", null, \"Model View Controller (MVC) divides an application into the three parts, Model, View and Controller. \"), mdx(\"p\", null, \"1)Model - objects used to retrieve and store the model state in the database. \"), mdx(\"p\", null, \"2)View - the pieces that make up the UI\"), mdx(\"p\", null, \"3)Controllers - manages the flow of data and business logic \"), mdx(\"p\", null, \"Overview of the Web API\"), mdx(\"p\", null, \"The ASP.NET Web API allows for displaying the data in various formats, such as XML and JSON. It is a framework that uses the HTTP services and makes it easy to provide the response to the client request. The response depends on the request of the clients. The web API builds the HTTP services and manages the request using the HTTP protocols. The Web API is an open source and it can be hosted in the application or on the IIS .The request may be GET, POST, DELETE or PUT. We can say that the Web API:\"), mdx(\"p\", null, \"Is an HTTP service.\\nIs designed for reaching the broad range of clients.\\nUses the HTTP application.\\nDifference between MVC and Web API\"), mdx(\"p\", null, \"There are many differences between MVC and Web API, including:\"), mdx(\"p\", null, \"We can use the MVC for developing  the Web application that replies as both data and views but the Web API is used for generating the HTTP services that replies only as data.\\nIn the Web API the request performs tracing with the actions depending on the HTTP services but the MVC request performs tracing with the action name.\\nThe Web API returns the data in various formats, such as JSON, XML and other format based on the accept header of the request. But the MVC returns the data in the JSON format by using JSONResult.\\nThe Web API supports content negotiation, self hosting. All these are not supported by the MVC.\\nThe Web API includes the various features of the MVC, such as routing, model binding but these features are different and are defined in the \\\"System.Web.Http\\\" assembly. And the MVC features are defined in the \\\" System.Web.Mvc\\\" assembly.\\nThe Web API helps the creation of RESTful services over the .Net Framework but the MVC does not support.\\nWhen we combined the MVC with Web API:\"), mdx(\"p\", null, \"When we do the self hosting on the application, in it we combine both the MVC controller and the API in a single project and it helps for managing the AJAX requests and returns the response in XML, JSON and other Formats.\\nWe combined the MVC and Web API for enabling the authorization for an application. In it we create two filters, one for the Web API and another for MVC.\\nweb.jpg\"), mdx(\"p\", null, \"This figure describes the combination of ASP.NET MVC and ASP.NET Web API.\"), mdx(\"p\", null, \"What I will tell you is a REST API is a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"service/app/backend/whateverYouWantToCallIt\"), \" that exposes endpoints (urls) that you can call or hit. These will either return some kind of data or perform an operation. Usually these endpoints will take/give data in the format of JSON \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Javascript Object Notation\"), \" (not always XML still does get deployed to PROD someplaces) \"));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"70d08886-a9e9-5ce0-af63-3439596c2d55"}}